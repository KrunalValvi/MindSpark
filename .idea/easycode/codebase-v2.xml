<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/mindspark/ExampleInstrumentedTest.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/components/AdminCard.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/model/AdminMentorModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/model/AdminUsersModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/model/AdminYoutubeModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCourseDetailScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCoursesListScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorDetailScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorsListScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/users/UserDetailScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/users/UserListScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/youtube/AdminEditYoutubeScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeBackend.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeDetail.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/admin/ui/AdminScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/components/AuthButton.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/components/AuthComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/components/AuthTextField.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/data/AuthData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/model/PinModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/model/UserModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/login/LoginScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/login/SignInScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/register/FillProfileScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/register/RegisterScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/security/CreateNewPassword.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/security/CreatePinScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/security/FingerprintScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/security/ForgotPasswordScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/auth/ui/security/VerifyForgotPasswordScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/backend/FirebaseAuth.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/backend/GoogleDrive.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/backend/GoogleSignIn.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/components/CommunityCategoriesList.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/data/CommunityViewModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/data/PostRepository.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/model/post.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/ui/CommunityScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/community/ui/NewPostScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/CourseFilterSection.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/CoursesDetailComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/CustomTextFieldImage.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/PopularCoursesCard.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/SingleMentorDetailsComponent.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/ToggleSelectionRow.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/components/TopMentorCard.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/data/CourseData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/data/FilterData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/data/MentorData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/data/SpecialOfferData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/model/CourseCategoryModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/model/CourseModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/model/FilterModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/model/MentorModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/model/SpecialOffersModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/CourseFilter.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/CoursesDetailScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/OnlineCoursesScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/PopularCoursesScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/SingleMentorDetails.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/TopMentorScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/courses/ui/VideoPlayerScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/components/HomeComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/components/SearchRecent.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/components/SpecialOfferCard.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/data/SearchData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/model/CategoriesModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/model/SearchModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/ui/CategoriesScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/ui/HomeScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/home/ui/SearchScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/components/CallComponent.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/components/ChatComponent.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/data/CallData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/model/CallModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/model/ChatModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/model/InboxModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/ui/CallScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/ui/ChatScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/inbox/ui/InboxScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/mentor/ui/mentor.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/components/CardComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/components/CardView.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/components/MyLessonsComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/components/MyOngoingLessonsComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/data/MyLessonsData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/model/MyLessonsModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/ui/Certificate.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/ui/Lessons.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/ui/MyCourses.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/myCourses/ui/MyOngoingLessons.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/navigation/components/NavigationBarScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/navigation/model/NavigationModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/navigation/AuthenticationNavigation.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/navigation/MainNavigation.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/navigation/UserNavigation.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/notifications/data/NotificationsData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/notifications/model/NotificationsModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/notifications/ui/NotificationsScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/components/OnboardingComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/data/OnboardingData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/model/OnboardingScreenModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/ui/LaunchScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding1.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding2.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding3.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/payment/ui/PaymentScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/EditProfileComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/NotificationItem.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/PaymentMethodItem.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/ProfileScreenComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/SecurityItem.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/components/SimpleCustomTextField.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/model/EditProfileModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/model/InviteFriendsModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/model/LanguageModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/AddNewCrad.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/EditProfile.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/HelpCenter.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/InviteFriends.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/Language.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/Notifications.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/PaymentOption.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/Security.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/sections/Terms.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/profile/ui/ProfileScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/transactions/components/TransactionsList.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/transactions/data/TransactionsData.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/transactions/model/TransactionsModel.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/transactions/ui/E-Receipt.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/transactions/ui/TransactionsScreen.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/ui/theme/Color.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/ui/theme/Theme.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/ui/theme/Type.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/utils/CommonComponents.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/utils/NetworkUtils.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/main/java/com/example/mindspark/MainActivity.kt;C:/Users/valvi/StudioProjects/MindSpark/app/src/test/java/com/example/mindspark/ExampleUnitTest.kt;C:/Users/valvi/StudioProjects/MindSpark/app/build.gradle.kts;C:/Users/valvi/StudioProjects/MindSpark/app/google-services.json;C:/Users/valvi/StudioProjects/MindSpark/build.gradle.kts;C:/Users/valvi/StudioProjects/MindSpark/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/valvi/StudioProjects/MindSpark&quot;:&quot;{\&quot;/app/src/main/java/com/example/mindspark/home/ui/SearchScreen.kt\&quot;:\&quot;This file contains a Composable function `SearchScreen` that represents the search screen in the Mindspark app. It includes the following:\\n\\n`SearchScreen`: This function creates the search screen UI, which includes a search input field, a section header for recent searches, and a lazy column displaying recent search items.\\n\\n`SearchScreenPreview`: This function provides a preview of the `SearchScreen` composable in the Android Studio preview.\\n\\nThe file also defines a `LightBlueBackground` color constant and imports various Compose UI components and data classes used in the search screen implementation.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/navigation/AuthenticationNavigation.kt\&quot;:\&quot;This file defines the navigation structure for the authentication-related screens in the Mindspark application. It uses the Jetpack Compose navigation library to define the composable functions for each screen and the transitions between them.\\n\\n`AuthenticationNavigation`: This function sets up the navigation graph for the authentication-related screens, including the LaunchScreen, IntroScreenStep1, IntroScreenStep2, IntroScreenStep3, SignInScreen, LoginScreen, RegisterScreen, FillProfileScreen, ForgotPasswordScreen, CreatePinScreen, SetFingerprintScreen, VerifyForgotPasswordScreen, and CreateNewPassword.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/transactions/components/TransactionsList.kt\&quot;:\&quot;This file contains a Composable function and a Preview function for a `TransactionsList` component.\\n\\n`TransactionsList`: A Composable function that displays a transaction item with details such as the title, course, and payment status.\\n\\n`TransactionsListPreview`: A Preview function that creates a sample `TransactionsModel` and passes it to the `TransactionsList` Composable function for preview purposes.\\n\\nThe file is responsible for rendering a list of transactions with their respective details and providing a clickable interface to navigate to an \\\&quot;EReceiptScreen\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/components/SearchRecent.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SearchRecent`: This function displays a row with the name of a search model and an \\\&quot;X\\\&quot; if the model is selected.\\n\\nThe file appears to be a part of a larger Android application built using Jetpack Compose, and it defines a UI component for displaying recent search items.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the MindSpark app using Jetpack Compose. It includes the following:\\n\\n`LightColorScheme`: A private color scheme for the light theme.\\n`DarkColorScheme`: A private color scheme for the dark theme.\\n`LocalCustomTypography`: A CompositionLocal for custom typography.\\n`MaterialTheme.customTypography`: An extension property to access the custom typography through `MaterialTheme`.\\nThe file also includes commented-out code for the `MindSparkTheme` function, which would have been used to apply the theme to the app\\u0027s content.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserListScreen.kt\&quot;:\&quot;This file contains a Composable function `UserListScreen` that displays a list of users retrieved from Firestore, along with a floating action button to add a new user.\\n\\n`UserListScreen`: Displays a list of users retrieved from Firestore, with a top app bar and a floating action button to add a new user.\\n\\n`UserListScreenPreview`: A preview of the `UserListScreen` composable function.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminUsersModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`AdminUsersModel`: A data class that represents an admin user with properties such as ID, full name, nickname, email, password, gender, phone number, and PIN.\\n\\nThis file does not contain any functions. It serves as a data model for representing admin user information in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthButton.kt\&quot;:\&quot;This file contains a single Composable function and a Preview function for an `AuthButton` component.\\n\\n`AuthButtonPreview`: Provides a preview of the `AuthButton` component.\\n\\n`AuthButton`: Renders a button with a text label and a forward arrow icon, with a clickable background and a custom appearance.\\n\\nThe file defines a custom button component for an authentication-related UI in an Android app built using Jetpack Compose.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyLessonsComponents.kt\&quot;:\&quot;This file contains reusable UI components for a \\\&quot;My Courses\\\&quot; screen in an Android app built using Jetpack Compose.\\n\\n`MyLessonsPreview`: Provides a preview of the `MyLessons` screen.\\n\\n`SectionCard`: Displays a card representing a single section, including a header and a list of lessons.\\n\\n`LessonRow`: Displays a row for a single lesson, including the lesson number, title, duration, and a play icon.\\n\\nThe file does not contain any classes, but rather focuses on defining these reusable UI components that can be used in the `MyLessons` screen or other screens in the app.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/SignInScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SignInScreen`: This function represents the sign-in screen of the application, allowing users to sign in with their Google account or navigate to the login screen to sign in with their email and password. It also provides an option for users to sign up if they don\\u0027t have an account.\\n\\nThe file also includes a preview function `SignInScreenPreview` for previewing the `SignInScreen` Composable in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleSignIn.kt\&quot;:\&quot;This file contains an `AuthenticationManager` class and several functions related to user authentication.\\n\\n`AuthenticationManager`: A class that manages user authentication, including creating accounts with email, logging in with email, and signing in with Google.\\n\\n`createAccountWithEmail`: Creates a new user account with the provided email and password.\\n\\n`loginWithEmail`: Logs in a user with the provided email and password.\\n\\n`createNonce`: Generates a unique nonce value for Google sign-in.\\n\\n`signInWithGoogle`: Initiates the Google sign-in process and authenticates the user with Firebase.\\n\\n`AuthResponse`: An interface that defines the possible responses from the authentication functions, either a successful response or an error response with a message.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding3.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`IntroScreenStep3`: This function renders the third onboarding screen, allowing the user to skip or navigate to the sign-in screen.\\n\\nThe file also imports several classes and functions from other packages, but does not define any additional classes or functions itself. The purpose of this file is to provide the implementation for the third step of the onboarding process in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeBackend.kt\&quot;:\&quot;This file is a Kotlin code that interacts with the YouTube API to fetch playlist items. It defines data models for the API response, a Retrofit interface to make the API calls, and functions to fetch the playlist items and extract the playlist ID from a URL.\\n\\n`PlaylistResponse`: A data class representing the response from the YouTube API for a playlist.\\n`PlaylistItem`: A data class representing an individual item in a playlist.\\n`Snippet`: A data class representing the metadata of a playlist item.\\n`Thumbnails`: A data class representing the thumbnail of a playlist item.\\n`Thumbnail`: A data class representing the URL of a thumbnail.\\n`ResourceId`: A data class representing the video ID of a playlist item.\\n`YouTubeApi`: A Retrofit interface defining the API endpoint and parameters for fetching playlist items.\\n`fetchPlaylistItems`: A function that fetches the playlist items using the `YouTubeApi` interface.\\n`extractPlaylistId`: A function that extracts the playlist ID from a given URL.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleDrive.kt\&quot;:\&quot;This file appears to be an empty Java package declaration for the `com.example.mindspark.backend` package. It does not contain any classes or functions. The purpose of this file is to define the package structure for the backend components of the \\\&quot;Mindspark\\\&quot; application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/ui/HomeScreen.kt\&quot;:\&quot;This file contains a Composable function `HomeScreen` that represents the home screen of an Android app built using Jetpack Compose. The file also includes several other Composable functions that are used to build the various components of the home screen, such as the header, search bar, categories list, popular courses list, and top mentors list. The file also includes state management and data loading logic to fetch and display course and mentor data from Firebase.\\n\\n`HomeScreen`: Composable function that represents the home screen of the app, including the header, search bar, special offer card, popular courses section, categories list, and top mentors section.\\n\\n`LightBlueBackground`: A constant representing a light blue background color used in the home screen.\\n\\n`HomeHeader`: Composable function that displays the header of the home screen.\\n\\n`CustomTextField`: Composable function that displays a custom text field with a search icon.\\n\\n`SpecialOfferCard`: Composable function that displays a special offer card.\\n\\n`SectionHeader`: Composable function that displays a section header with a \\\&quot;See All\\\&quot; button.\\n\\n`CategoriesListShow`: Composable function that displays a list of course categories.\\n\\n`PopularCoursesListVertical`: Composable function that displays a vertical list of popular courses.\\n\\n`TopMentorsListHorizontal`: Composable function that displays a horizontal list of top mentors.\\n\\n`HomeScreenPreview`: Composable function that provides a preview of the `HomeScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/FingerprintScreen.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`SetFingerprintScreen`: A Composable function that displays a screen for setting up a user\\u0027s fingerprint for authentication.\\n\\n`AutoDismissDialog`: A Composable function that displays a dialog that automatically dismisses after a certain time and navigates to the home screen.\\n\\nThis file is responsible for implementing the UI and functionality for the \\\&quot;Set Fingerprint\\\&quot; screen in the app, which allows users to set up their fingerprint for authentication and provides a dialog to confirm the successful setup.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/notifications/model/NotificationsModel.kt\&quot;:\&quot;This file defines a data class `Notification` that represents a notification with a title, message, and an icon.\\n\\n`Notification`: A data class that represents a notification with a title, message, and an icon.\\n\\nThe file does not contain any functions, but rather defines a data class that can be used to represent notifications in an application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Terms.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`TermsScreen`: This function creates a Scaffold with a top bar and a scrollable column that displays the terms and conditions for the MindSpark app.\\n\\nThe file also includes a `ProfileScreenPreview2` function, which is a preview for the `TermsScreen` Composable.\\n\\nOverall, this file defines the UI for the terms and conditions screen of the MindSpark app, which is displayed to users when they need to review and accept the app\\u0027s terms of use.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project named \\\&quot;MindSpark\\\&quot;. It sets up the plugin management and dependency resolution for the project, and defines the root project name and the included modules.\\n\\n`pluginManagement`: Configures the repositories for plugin management, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories for dependency resolution, including Google and Maven Central, and sets the repositories mode to fail on project repositories.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;MindSpark\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/data/FilterData.kt\&quot;:\&quot;This file does not contain any classes, but it does contain one function:\\n\\n`getFilterOptions()`: This function returns a list of `FilterCategory` objects, each containing a list of `FilterItem` objects, which represent the various filter options available for a course listing.\\n\\nThe purpose of this file is to provide a centralized location for the filter data used in the Mindspark courses application. It defines the different categories of filters, such as subcategories, levels, price, features, rating, and video durations, along with the specific filter items within each category.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/CustomTextFieldImage.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CustomTextField_Image`: This function creates a custom text field with a leading icon, an optional trailing icon, and various visual customizations such as rounded corners, shadow, and focused/unfocused colors.\\n\\nThe file appears to be a part of a larger Android application built using Jetpack Compose, and it provides a reusable custom text field component with additional visual and functional features.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/CoursesDetailComponents.kt\&quot;:\&quot;This file contains Composable functions that make up the UI components for a course details screen in an Android app built using Jetpack Compose.\\n\\n`CourseDetailComponents`: Renders the main course details screen, including the course header, curriculum, instructors, and reviews.\\n\\n`CourseHeader`: Displays the course title, category, rating, and other details.\\n\\n`CurriculumContent`: Displays the list of videos in the course curriculum and allows the user to play them.\\n\\n`InstructorsSection`: Displays the list of instructors for the course and allows the user to click on them.\\n\\n`ReviewsSection`: Displays the list of reviews for the course.\\n\\n`ReviewItem`: Displays a single review item with the reviewer\\u0027s name, review text, like count, and time since the review was posted.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/model/post.kt\&quot;:\&quot;This file defines two data classes:\\n\\n`Post`: A data class that represents a post in a community, containing information such as the post ID, user ID, user name, full name, profile image URL, content, image URL, category, timestamp, likes, list of users who liked the post, and a list of comments.\\n\\n`Comment`: A data class that represents a comment on a post, containing information such as the comment ID, user ID, user name, comment content, and timestamp.\\n\\nThis file does not contain any functions, but rather defines the structure of the `Post` and `Comment` data classes, which can be used throughout the application to represent and manage community posts and comments.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Lessons.kt\&quot;:\&quot;This file contains a single Composable function `MyLessons` that displays a screen with a list of course sections and buttons for navigating to the certificate screen and starting the course again.\\n\\n`MyLessons`: A Composable function that displays a screen with a list of course sections and buttons for navigating to the certificate screen and starting the course again.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/EditProfileComponents.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`ProfileSection`: A composable function that displays a section of a user\\u0027s profile, including a title and a list of `ProfileField` items.\\n\\n`ProfileFieldItem`: A composable function that displays a single `ProfileField` item, which can be either a dropdown menu or an editable text field.\\n\\nThe file also defines the `ProfileField` data class, which represents a single field in the user\\u0027s profile.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Certificate.kt\&quot;:\&quot;This file contains a Jetpack Compose UI for displaying a certificate screen. It includes the following classes and functions:\\n\\n`CertificateScreen`: A composable function that displays the certificate screen, including the top bar and the certificate card.\\n\\n`CertificateCard`: A composable function that displays the certificate card, including the profile image, certificate details, and signature.\\n\\nThe file also includes some sample data and a preview function for the `CertificateScreen` composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/E-Receipt.kt\&quot;:\&quot;This file contains a Composable function and a helper Composable function for displaying an E-Receipt screen in a Jetpack Compose-based Android application.\\n\\n`EReceiptScreen`: This Composable function creates the UI for the E-Receipt screen, including an image of a receipt, a barcode image, and a column of detailed information about the transaction.\\n\\n`DetailRow`: This helper Composable function creates a row with a label and a value, with the value displayed in a colored box if it is \\\&quot;Paid\\\&quot;.\\n\\nThe file also includes several imports and a preview function for the `EReceiptScreen` Composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/model/MyLessonsModel.kt\&quot;:\&quot;This file defines three data classes:\\n\\n`Section`: Represents a section of a course, containing a title, total time, and a list of lessons.\\n\\n`LessonItem`: Represents a single lesson within a section, containing a number, title, and duration.\\n\\n`CertificateData`: Represents data for a certificate, including the recipient\\u0027s name, course title, issued date, certificate ID, and signer\\u0027s name.\\n\\nThis file does not contain any functions, but rather defines the structure of the data that will be used in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CoursesDetailScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CourseDetailScreen`: This function displays the details of a course, including the course information, mentor details, and a \\\&quot;Purchase Course\\\&quot; button that appears at the bottom of the screen when the user scrolls to the bottom.\\n\\nThe file also includes several helper functions and variables:\\n\\n`LightBlueBackground`: A custom color used as the background color for the screen.\\n\\n`LaunchedEffect`: Used to fetch the course and mentor data from Firebase and track the scroll position of the screen.\\n\\n`AnimatedVisibility`: Used to show and hide the \\\&quot;Purchase Course\\\&quot; button based on the user\\u0027s scroll position.\\n\\nOverall, this file is responsible for rendering the course details screen in the Mindspark app, fetching the necessary data, and providing a smooth user experience with animations and scroll-based interactions.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/model/InboxModel.kt\&quot;:\&quot;This file contains an `enum` class and no other classes or functions.\\n\\n`CallType`: An enum class that represents different types of calls, such as incoming, outgoing, missed, and video calls.\\n\\nThe file appears to be a part of a larger application, likely an inbox or messaging feature, where the `CallType` enum is used to represent the different types of calls that can occur.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/SecurityItem.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SecurityScreenItem`: A composable function that creates a row with a title and a switch, allowing the user to toggle a setting.\\n\\nThe file defines a custom UI component for a security screen item in an Android app built using Jetpack Compose. The component consists of a row with a title on the left and a switch on the right, allowing the user to toggle a security-related setting. The switch can be customized with different colors for the checked and unchecked states.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthTextField.kt\&quot;:\&quot;This file contains several Composable functions that define custom UI components for an authentication screen in an Android app built using Jetpack Compose.\\n\\n`StaticAuthTextField`: A read-only text field with a placeholder and optional leading icon.\\n\\n`AuthTextField`: A customizable text field with a placeholder, leading icon, and optional password visibility toggle.\\n\\n`CustomTextField`: A customizable text field with a placeholder and leading icon.\\n\\n`CustomTextDisplay`: A clickable box display with a title and information text.\\n\\nThe file provides a set of reusable UI components that can be used in the authentication flow of the app, with customizable features and styling.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/model/SearchModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`SearchModel`: A data class that represents a search result, with a name and a boolean flag indicating whether it is selected.\\n\\nThis file does not contain any functions. It simply defines a data class to represent a search result with a name and a selection state.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/LaunchScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`LaunchScreen`: This function is responsible for displaying the launch screen of the app, which includes a blue background and the app\\u0027s logo. It also handles the navigation logic based on the user\\u0027s authentication state and whether they have seen the onboarding screens before.\\n\\nThe file does not contain any classes. It is a Jetpack Compose-based UI component that handles the initial launch and navigation of the app.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, including the project number, project ID, storage bucket, client information, and API key. The file is used to configure the Firebase SDK for use in an Android application with the package name \\\&quot;com.example.mindspark\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/data/AuthData.kt\&quot;:\&quot;This file appears to be an empty Kotlin package file for the `com.example.mindspark.auth.data` package. It does not contain any classes or functions. The purpose of this file is likely to serve as a container for data-related classes and functions for the authentication module of the `com.example.mindspark` application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/model/InviteFriendsModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Friend`: A data class that represents a friend, with properties for their name, phone number, and whether they have been invited.\\n\\nThis file does not contain any functions. It simply defines a data class to represent a friend, with properties to store their name, phone number, and whether they have been invited.\&quot;,\&quot;/app/src/androidTest/java/com/example/mindspark/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not define any classes or functions, but rather tests the context of the app under test.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the context of the app under test.\\n\\n`useAppContext()`: This function tests that the package name of the app under test is \\\&quot;com.example.mindspark\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/LoginScreen.kt\&quot;:\&quot;This file contains a Composable function `LoginScreen` that represents the login screen of an Android app. It handles user authentication, including login with email and password, as well as login with Google. The file also includes a helper function `isNetworkAvailable` to check the network connectivity.\\n\\n`isNetworkAvailable`: Checks if the device has an active network connection.\\n\\n`LoginScreen`: Renders the login screen with input fields for email and password, a \\\&quot;Remember Me\\\&quot; checkbox, and buttons for signing in and signing up. It also handles the login process and displays appropriate error messages.\\n\\n`LoginScreenPreview`: Provides a preview of the `LoginScreen` Composable function for the Android Studio Compose UI toolkit.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/navigation/MainNavigation.kt\&quot;:\&quot;This file defines the `AppNavigation` Composable function, which sets up the navigation structure for the app. It includes the following:\\n\\n`AppNavigation`: This function sets up the navigation graph, manages the bottom navigation bar, and handles the status bar color changes based on the current screen.\\n\\n`AuthenticationNavigation`: This function is called within `AppNavigation` to define the navigation graph for the authentication-related screens.\\n\\n`UserNavigation`: This function is called within `AppNavigation` to define the navigation graph for the user-related screens.\\n\\nThe file also includes the following Composable functions:\\n\\n`LaunchScreen`: This function represents the splash screen of the app.\\n`IntroScreenStep1`: This function represents the first step of the onboarding process.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/TransactionsScreen.kt\&quot;:\&quot;This file contains a single Composable function `TransactionsScreen` that displays a screen with a list of transactions using the `TransactionsList` component.\\n\\n`TransactionsScreen`: Displays a screen with a list of transactions using the `TransactionsList` component.\\n\\nThe file also includes a `LoginScreenPreview` Composable function that provides a preview of the `TransactionsScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/payment/ui/PaymentScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for a payment screen in an Android app. It includes the following classes and functions:\\n\\n`PaymentScreen`: A composable function that represents the main payment screen, allowing users to select a payment method and view payment details.\\n\\n`PaymentMethodCard`: A composable function that displays a card for a payment method, with an icon, title, and selection indicator.\\n\\n`PaymentDetailsCard`: A composable function that displays a card with payment details, including the amount and a description.\\n\\n`SecurityNote`: A composable function that displays a note about the security of the payment process.\\n\\nThe file also includes various Compose-related imports and utility functions to handle the animation, state management, and navigation of the payment screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/TopMentorScreen.kt\&quot;:\&quot;This file contains a single Composable function and a preview for it.\\n\\n`TopMentorScreen`: This function creates a Scaffold with a top bar and a column that displays a list of top mentors.\\n\\n`TopMentorScreenPreview`: This function is a preview for the `TopMentorScreen` Composable, which allows it to be previewed in the Android Studio preview window.\\n\\nThe file also defines a `LightBlueBackground` color constant, which is used as the background color for the screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/components/ChatComponent.kt\&quot;:\&quot;This file contains Compose UI components for a chat application.\\n\\n`decodeBase64Image`: Decodes a Base64 string into a Bitmap.\\n\\n`ChatItem`: Composable function that displays a single chat item with the user\\u0027s profile picture, name, and message description.\\n\\n`ChatSection`: Composable function that displays a list of chat items using a LazyColumn.\\n\\n`ChatInputBar`: Composable function that displays an input bar for the user to type and send messages.\\n\\nThe file also includes a `ChatInputBarPreview` function for previewing the `ChatInputBar` component.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/model/SpecialOffersModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`SpecialOfferModel`: A data class that represents a special offer, including its title, subtitle, description, and background image resource ID.\\n\\nThis file does not contain any functions. It is a simple data class that serves as a model for representing special offers in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/components/HomeComponents.kt\&quot;:\&quot;This file contains several Composable functions that are used to create the UI components for the home screen of a learning app. Here\\u0027s a list of the classes and functions in the file:\\n\\n`HomeHeader`: A composable function that displays the header of the home screen, including the user\\u0027s name and a notification icon.\\n\\n`SectionHeader`: A composable function that displays the header for a section of the home screen, including the section title and a \\\&quot;See All\\\&quot; button.\\n\\n`CategoriesListShow`: A composable function that displays a list of course categories that the user can select from.\\n\\n`CategoriesList`: A composable function that displays a list of course categories that the user can select from.\\n\\n`SpecialOfferCard`: A composable function that displays a list of special offer cards.\\n\\n`PopularCoursesListVertical`: A composable function that displays a list of popular courses in a vertical layout.\\n\\n`PopularCoursesListHorizontal`: A composable function that displays a list of popular courses in a horizontal layout.\\n\\n`TopMentorsListHorizontal`: A composable function that displays a list of top mentors in a horizontal layout.\\n\\n`TopMentorsListVertical`: A composable function that displays a list of top mentors in a vertical layout.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/mentor/ui/mentor.kt\&quot;:\&quot;This file contains a single Composable function `MentorScreen` that sets up the UI for a mentor screen in a Jetpack Compose application. The screen includes a top bar with a title and a back button, and a light blue background. The main content area is currently empty, but it is intended to be used for displaying mentor-related content.\\n\\n`MentorScreen`: Composable function that sets up the UI for a mentor screen in a Jetpack Compose application.\\n\\n`MentorScreenPreview`: Composable function that provides a preview of the `MentorScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/ui/CategoriesScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for displaying a list of categories in a grid layout. It includes the following classes and functions:\\n\\n`CategoryCard`: A composable function that renders a single category card with an icon and title.\\n\\n`CategoriesScreen`: A composable function that renders the main screen, including a search bar and a grid of category cards.\\n\\nThe file also includes some utility functions and constants, such as `LightBlueBackground`, which defines a light blue color used as the background for the screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreatePinScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CreatePinScreen`: This function creates a screen for the user to set a new 4-digit PIN for their account, with input fields and a \\\&quot;Continue\\\&quot; button that updates the user\\u0027s PIN and navigates to the next screen.\\n\\nThe file also includes a `CreatePinScreenPreview` function, which is a Composable function used for previewing the `CreatePinScreen` in the Android Studio preview.\\n\\nOverall, this file is responsible for the UI and functionality of the \\\&quot;Create New Pin\\\&quot; screen in the app\\u0027s authentication flow.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Type.kt\&quot;:\&quot;This file defines custom typography for the Mindspark app using the Jost and Mulish font families. It includes the following classes and functions:\\n\\n`JostTypography`: A class that defines the different text styles (regular, semi-bold, bold, and extra-bold) for the Jost font family.\\n\\n`MulishTypography`: A class that defines the different text styles (regular, semi-bold, bold, and extra-bold) for the Mulish font family.\\n\\n`CustomTypography`: A class that combines the Jost and Mulish typography styles into a single custom typography instance.\\n\\n`CustomThemeTypography`: An instance of the `CustomTypography` class that defines the custom typography for the app.\\n\\n`AppTypography`: An instance of the `Typography` class from Material3 that defines the default text styles for the app, using the Mulish font family as the default.\\n\\nThe file also defines the `JostFontFamily` and `MulishFontFamily` instances, which are used to create the custom text styles.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/ForgotPasswordScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ForgotPasswordScreen`: This function creates a screen for the user to enter their email address to reset their password, and sends a password reset email to the provided email address.\\n\\nThe file also includes a `ForgotPasswordScreenPreview` function, which is used for previewing the `ForgotPasswordScreen` Composable in the Android Studio preview.\\n\\nOverall, this file is responsible for implementing the \\\&quot;Forgot Password\\\&quot; functionality in the app\\u0027s authentication flow.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/PaymentOption.kt\&quot;:\&quot;This file contains a Compose-based UI for a payment option screen in the Mindspark app.\\n\\n`PaymentOptionScreen`: A composable function that renders the payment option screen, including a list of payment cards and a button to add a new card.\\n\\n`PaymentCardItem`: A composable function that renders a single payment card item, displaying the card number and a \\\&quot;Connected\\\&quot; status.\\n\\n`PaymentOptionScreenPreview`: A composable function that provides a preview of the `PaymentOptionScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/NotificationItem.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`NotificationItem`: A composable function that displays a notification item with a title and a switch to toggle the notification state.\\n\\nThe file defines a custom notification item UI component for a profile screen in an Android app built using Jetpack Compose. The component consists of a row layout with a title text and a switch control. The switch can be customized with different colors for the checked and unchecked states.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/EditProfile.kt\&quot;:\&quot;This file contains a Compose-based UI for an \\\&quot;Edit Profile\\\&quot; screen in an Android app. It allows the user to update their profile information, including their profile picture, and provides a loading overlay while the update is in progress.\\n\\n`EditProfileScreen`: A Composable function that renders the \\\&quot;Edit Profile\\\&quot; screen, including the profile image, text fields for profile information, and a button to update the profile.\\n\\n`decodeBase64ToBitmap`: A helper function that decodes a Base64 string into a Bitmap.\\n\\n`AvatarSelectionDialog`: A Composable function that displays a dialog for selecting an avatar image from a list of available avatars.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle Kotlin DSL script that configures the Android application project. It sets up the project\\u0027s dependencies, build types, and other configurations. There are no explicit classes or functions defined in this file. The file performs the following tasks:\\n\\n1. Applies various Android-related Gradle plugins, including the Android application plugin, Kotlin Android plugin, and Jetpack Compose plugin.\\n2. Configures the Android application\\u0027s namespace, compile SDK version, default settings, and build types (release and debug).\\n3. Sets the Java and Kotlin compiler options to use Java 11.\\n4. Enables Jetpack Compose and view binding features for the application.\\n5. Adds a wide range of dependencies, including Android core libraries, Jetpack Compose, Firebase, Google Play Services, and various third-party libraries for networking, image loading, and YouTube player integration.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/model/UserModel.kt\&quot;:\&quot;This file contains two data classes:\\n\\n`UserModel`: A data class that represents a user\\u0027s profile information, including their email, password, full name, nickname, date of birth, phone number, gender, and whether they have accepted the terms.\\n\\n`LoginCredentials`: A data class that represents a user\\u0027s login credentials, including their email, password, and a boolean flag indicating whether they want to be remembered.\\n\\nThis file does not contain any functions. It serves as a model for user-related data in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/notifications/ui/NotificationsScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for a Notifications screen in an Android app.\\n\\n`SectionTitle`: A composable function that displays a section title.\\n\\n`NotificationCard`: A composable function that displays a notification card with an icon, title, and message.\\n\\n`NotificationsScreen`: A composable function that creates the Notifications screen, including a top bar and a lazy column of notification cards organized by date.\\n\\n`NotificationsScreenPreview`: A preview composable function that displays the `NotificationsScreen` for testing purposes.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/ToggleSelectionRow.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`ToggleSelectionRowCourses`: A composable function that creates a row of selectable options, where the selected option is highlighted with a different background color and text color.\\n\\n`ToggleSelectionRowMentor`: A composable function that creates a row of selectable options, similar to `ToggleSelectionRowCourses`, but with a different color scheme for the selected and unselected options.\\n\\nThe purpose of this file is to provide reusable UI components for displaying a row of selectable options, which can be used in a larger Compose-based application, such as a courses or mentors section.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminYoutubeModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`AdminYoutubeModel`: A data class that represents the model for an admin-managed YouTube course, including information about the course category, title, price, rating, student count, video count, duration, difficulty level, language, certification, description, mentor IDs, image resource, and course features.\\n\\nThis file does not contain any functions. It serves as a data model for representing the details of an admin-managed YouTube course.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardView.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`MyCompletedCourseCardHorizontal`: A composable function that creates a horizontal card UI component for displaying completed courses, including course details, progress, and a clickable action.\\n\\n`MyOngoingCourseCardHorizontal`: A composable function that creates a horizontal card UI component for displaying ongoing courses, including course details, progress, and a clickable action.\\n\\nThe file provides the UI components for displaying completed and ongoing courses in a horizontal layout, with various details such as course title, category, rating, and progress.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/data/SearchData.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a `SearchData` object that contains a list of `SearchModel` objects, each representing a recent search term with a boolean flag indicating whether it is selected or not. The purpose of this file is to provide a set of predefined search terms that can be used in the application\\u0027s search functionality.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyOngoingLessonsComponents.kt\&quot;:\&quot;This file contains reusable UI components for a course management app, specifically the `SectionCard` and `LessonRow` components.\\n\\n`OngoingSectionCardPreview`: A preview composable that displays the `OngoingSectionCard` component.\\n\\n`OngoingSectionCard`: A composable that displays a card representing a single section, including a header and a list of lessons.\\n\\n`LessonRow`: A composable that displays a row for a single lesson, including the lesson number, title, duration, and a play or lock icon.\\n\\nThe file provides a reusable set of UI components that can be used in different screens of the course management app, such as the `MyLessons` and `MyOngoingLessons` screens.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorDetailScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`MentorDetailScreen`: This function displays a screen for creating or editing a mentor, allowing the user to input the mentor\\u0027s name, profession, bio, profile image, and social links, and saves the mentor data to Firestore.\\n\\nThe file also imports various Compose UI components and Firebase Firestore functionality to implement the mentor detail screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/ProfileScreen.kt\&quot;:\&quot;This file contains a Composable function `ProfileScreen` that represents the UI for a user\\u0027s profile screen in an Android app built using Jetpack Compose.\\n\\n`ProfileScreen`: Displays the user\\u0027s profile information, settings, and a logout button.\\n\\n`ProfileScreenPreview`: Provides a preview of the `ProfileScreen` Composable function.\\n\\nThe file also imports various Jetpack Compose and Firebase-related classes and functions to implement the profile screen functionality.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/utils/NetworkUtils.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`isInternetAvailable`: Checks if the device has an active internet connection.\\n\\n`rememberNetworkState`: Provides a composable function that remembers the current network state and updates it when the network connectivity changes.\\n\\nThis file is a utility module that provides functions to check the internet connectivity and monitor the network state in an Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/AdminScreen.kt\&quot;:\&quot;This file defines the UI for the admin section of the Mindspark application, which includes screens for managing users, courses, mentors, and YouTube content.\\n\\n`Screen`: A sealed class that represents the different screens in the admin UI.\\n\\n`AdminScreen`: A composable function that renders the main admin screen and handles navigation between the different screens.\\n\\n`AdminCoursesListScreen`: A composable function that renders the screen for listing all courses.\\n\\n`AdminCourseDetailScreen`: A composable function that renders the screen for displaying details of a specific course.\\n\\n`MentorsListScreen`: A composable function that renders the screen for listing all mentors.\\n\\n`MentorDetailScreen`: A composable function that renders the screen for displaying details of a specific mentor.\\n\\n`UserListScreen`: A composable function that renders the screen for listing all users.\\n\\n`UserDetailScreen`: A composable function that renders the screen for displaying details of a specific user.\\n\\n`YoutubeDetail`: A composable function that renders the screen for displaying YouTube content.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/model/MentorModel.kt\&quot;:\&quot;This file defines three data classes:\\n\\n`MentorCourseModel`: A data class that represents a course offered by a mentor, containing information such as the course ID, title, level, price, rating, number of videos, and duration.\\n\\n`ReviewModel`: A data class that represents a review for a course, containing the reviewer\\u0027s name, the review text, and the review date.\\n\\n`MentorModel`: A data class that represents a mentor, containing the mentor\\u0027s ID, name, profession, the number of courses, students, and ratings, a list of courses offered by the mentor, a list of reviews for the mentor\\u0027s courses, and an image resource ID.\\n\\nThis file does not contain any functions, but rather defines the structure of the data models used in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/components/SpecialOfferCard.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SpecialOfferCard`: This function creates a card component that displays a special offer, including an image, title, subtitle, description, and a row of dots at the bottom.\\n\\nThe file appears to be a part of a larger Android application built using Jetpack Compose, a modern UI toolkit for Android. The `SpecialOfferCard` function is likely used to display a special offer or promotion within the application\\u0027s home screen or a similar section.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/CallScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ActiveCallScreen`: This function represents the UI for an active call screen, displaying the caller\\u0027s information, mute/speaker controls, and an end call button.\\n\\nThe file also includes a `Preview` function that allows for previewing the `ActiveCallScreen` Composable in the Android Studio preview.\\n\\nOverall, this file defines the user interface for an active call screen in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/PaymentMethodItem.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`PaymentMethodItem`: A composable function that renders a payment method item with an icon, title, subtitle, and a selected state indicator.\\n\\nThe file defines a custom UI component for displaying a payment method item in a Jetpack Compose-based Android application. The component includes an icon, title, subtitle, and a selected state indicator, and can be clicked to perform an action.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorsListScreen.kt\&quot;:\&quot;This file contains a single Composable function `MentorsListScreen` that displays a list of mentors retrieved from a Firestore database, along with a floating action button to add a new mentor.\\n\\n`MentorsListScreen`: Displays a list of mentors and provides a floating action button to add a new mentor.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/RegisterScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for a registration screen in an Android app. It includes the following classes and functions:\\n\\n`isNetworkAvailable`: A helper function that checks if the device has an active network connection.\\n\\n`RegisterScreen`: A Composable function that renders the registration screen, including input fields for email and password, a checkbox for accepting terms and conditions, and buttons for signing up and signing in with Google.\\n\\nThe file also includes various Composable functions for UI elements such as `AuthTextField`, `AuthButton`, and `CircularProgressIndicator`. The registration process is handled by the `AuthenticationManager` class, which is responsible for creating a new account with an email and password, as well as signing in with Google.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/AddNewCrad.kt\&quot;:\&quot;This file contains a Composable function and a helper Composable function for an \\\&quot;Add New Card\\\&quot; screen in a Kotlin Compose-based Android application.\\n\\n`AddNewCardScreen`: This Composable function represents the \\\&quot;Add New Card\\\&quot; screen, which allows the user to input their credit card details and navigate to the \\\&quot;Profile\\\&quot; screen.\\n\\n`CardWithBackground`: This Composable function creates a credit card UI with a background image and overlays the card details, such as the card number, expiry date, and cardholder name.\\n\\nThe file also includes various Composable functions from the Compose UI toolkit, such as `Scaffold`, `Column`, `Row`, `TextField`, and `AuthButton`, to build the user interface.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/data/MyLessonsData.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getSampleSections()`: This function returns a list of `Section` objects, which represent the sections of a course with their respective lessons.\\n\\n`sampleData`: This is a `CertificateData` object that contains sample data for a certificate, including the recipient\\u0027s name, course title, issued date, certificate ID, and signer\\u0027s name.\\n\\nThis file is responsible for providing sample data or data-fetching logic for a course management application. It defines the structure of course sections and lessons, as well as sample certificate data that can be used in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyOngoingLessons.kt\&quot;:\&quot;This file contains a single Composable function `MyOngoingLessons` that displays a screen with a list of ongoing courses and a \\\&quot;Continue Courses\\\&quot; button. The file also includes a preview function `MyOngoingLessonsPreview` that sets up a `NavController` and previews the `MyOngoingLessons` composable.\\n\\n`MyOngoingLessons`: Displays a screen with a list of ongoing courses and a \\\&quot;Continue Courses\\\&quot; button.\\n\\n`MyOngoingLessonsPreview`: Sets up a `NavController` and previews the `MyOngoingLessons` composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/PopularCoursesScreen.kt\&quot;:\&quot;This file contains a Composable function `PopularCoursesList` that displays a list of popular courses with a category filter and navigation to the course detail screen.\\n\\n`PopularCoursesList`: Displays a list of popular courses with a category filter and navigation to the course detail screen.\\n\\n`PopularCoursesListPreview`: Provides a preview of the `PopularCoursesList` Composable function.\\n\\nThe file also defines a `LightBlueBackground` color constant and imports various Compose UI components and classes from the `com.example.mindspark` package.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/SimpleCustomTextField.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SimpleCustomTextField`: A Composable function that creates a custom text field with a label, a rounded corner shape, and a shadow effect.\\n\\nThe file defines a custom text field component for use in a Jetpack Compose-based Android application. The component includes a label, a text field with a rounded corner shape and a shadow effect, and handles the value and onValueChange callbacks.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/HelpCenter.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`HelpCenterScreen`: This function defines the UI for the Help Center screen, which includes a top bar with a back button and a light blue background.\\n\\nThe file appears to be part of a larger Android application built using Jetpack Compose, and it likely represents a screen or section within the application\\u0027s profile or settings area.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Notifications.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ProfileNotificationsScreen`: This function creates a screen that displays a list of notification settings that the user can toggle on or off.\\n\\nThe file also includes a `NotificationsScreenPreview` function, which is a Composable function used for previewing the `ProfileNotificationsScreen` in the Android Studio preview.\\n\\nOverall, this file defines a screen that allows the user to manage their notification preferences within the app.\&quot;,\&quot;/app/src/test/java/com/example/mindspark/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class for the `com.example.mindspark` package.\\n\\n`ExampleUnitTest`: A class that contains a single unit test to verify that the addition operation is correct.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/components/AdminCard.kt\&quot;:\&quot;This file contains three Composable functions:\\n\\n`AdminCourseCard`: A composable function that creates a card-like UI element to display information about a course, including the course category, title, description, image, rating, and number of students.\\n\\n`AdminMentorCard`: A composable function that creates a card-like UI element to display information about a mentor, including the mentor\\u0027s name, profession, and bio.\\n\\n`AdminUsersCard`: A composable function that creates a card-like UI element to display information about a user, including the user\\u0027s full name and email.\\n\\nThe purpose of this file is to provide reusable UI components for an admin interface in an Android app built using Jetpack Compose.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/ui/NewPostScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`NewPostScreen`: This function represents a screen in the app where users can create a new post, including the ability to input post content and submit the post.\\n\\nThe file also imports various Compose UI components and classes from the Android Jetpack Compose library, as well as classes from the Firebase SDK, to implement the functionality of the `NewPostScreen` composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/model/PinModel.kt\&quot;:\&quot;This file appears to be an empty Java package named `com.example.mindspark.auth.model`. It does not contain any classes or functions. The purpose of this file is likely to serve as a container for model classes related to the authentication functionality of the \\\&quot;Mindspark\\\&quot; application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/data/CallData.kt\&quot;:\&quot;This file appears to be a Kotlin file that defines data models for a chat and call history in an inbox application. It does not contain any classes or functions, but rather defines two lists of data models:\\n\\n`ChatModel`: A data model representing a chat conversation, including the user\\u0027s ID, name, description, chat ID, message count, and online status.\\n\\n`CallModel`: A data model representing a call, including the call ID, name, type (incoming or outgoing), and date.\\n\\nThe file also includes commented-out sample data for the `chatList` and `callsList` lists, which could be used to populate the corresponding data models.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/navigation/components/NavigationBarScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`BottomNavigationBar`: This function creates a bottom navigation bar with multiple items, where the selected item is highlighted based on the current route in the navigation controller.\\n\\nThe file also includes some helper functions and variables to determine the current user\\u0027s account type and the current route in the navigation controller.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Language.kt\&quot;:\&quot;This file contains Jetpack Compose UI components for a language selection screen in an Android app.\\n\\n`LanguageItem`: A composable function that displays a single language option with its name, native name, and a checkmark if it is selected.\\n\\n`LanguageScreen`: A composable function that creates the entire language selection screen, including the list of available languages, a header, and a button to apply the selected language.\\n\\n`LanguageScreenPreview`: A composable function that provides a preview of the `LanguageScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/model/ChatModel.kt\&quot;:\&quot;This file contains three data classes:\\n\\n`ChatModel`: A data class that represents a chat conversation, including information about the user, chat details, and message count.\\n\\n`MessageModel`: A data class that represents a single message within a chat conversation, including information about the sender, receiver, message text, timestamp, and read/seen status.\\n\\n`ChatStatus`: A data class that represents the status of a chat, including the chat ID, user email, unread message count, and timestamp of the last message.\\n\\nThis file does not contain any functions, but rather defines the structure of the data models used in the application\\u0027s chat functionality.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/transactions/data/TransactionsData.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`getAllTransactions()`: This function returns a list of `TransactionsModel` objects, which represent a set of transactions with various titles, courses, and statuses.\\n\\nThe file appears to be a data source for a list of transactions, which can be used in a larger application or system.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseCategoryModel.kt\&quot;:\&quot;This file contains two main components:\\n\\n`CategoryData`: This object holds a list of `CategoryItem` objects, each representing a category of courses with a name and an associated image resource.\\n\\n`CourseCategory`: This enum defines a set of course categories that can be used to filter or categorize courses on the home screen.\\n\\nThe file does not contain any functions, but rather serves as a data source for the course categories and their associated metadata.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/OnlineCoursesScreen.kt\&quot;:\&quot;This file contains a Composable function `CoursesListScreen` that displays a screen with a search bar, a toggle selection row, and either a list of popular courses or a list of top mentors, depending on the selected option. The screen also includes a top bar with a back button.\\n\\n`CoursesListScreen`: A Composable function that displays a screen with a search bar, a toggle selection row, and either a list of popular courses or a list of top mentors.\\n\\n`CustomTextField_Image`: A Composable function that creates a custom text field with a leading icon and a trailing image.\\n\\n`ToggleSelectionRowCourses`: A Composable function that creates a row of toggle buttons for selecting between \\\&quot;Courses\\\&quot; and \\\&quot;Mentors\\\&quot;.\\n\\n`PopularCoursesListHorizontal`: A Composable function that displays a horizontal list of popular courses.\\n\\n`TopMentorsListVertical`: A Composable function that displays a vertical list of top mentors.\\n\\n`SectionHeader`: A Composable function that creates a header for a section of the screen.\\n\\n`AuthTopBar`: A Composable function that creates a top bar with a back button and a title.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/components/ProfileScreenComponents.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`ProfileHeader`: A Composable function that displays the user\\u0027s profile information, including their profile picture, full name, and email.\\n\\n`SettingsList`: A Composable function that displays a list of settings options, such as Edit Profile, Payment Option, Notifications, and more.\\n\\n`SettingItem`: A Composable function that represents a single setting item in the SettingsList.\\n\\n`decodeBase64ToBitmap`: A function that decodes a Base64 string to a Bitmap object.\\n\\nThis file is responsible for rendering the profile header and settings list components in the app\\u0027s profile screen. It fetches the user\\u0027s profile information from Firestore and displays it, and also provides a list of settings options that the user can navigate to.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/backend/FirebaseAuth.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getFirebaseProfileData()`: Retrieves the user\\u0027s profile data from Firebase.\\n\\n`validateProfile(data: ProfileData)`: Validates the user\\u0027s profile data and returns an updated `ProfileData` object with any errors.\\n\\n`showDatePicker(context: Context, onDateSelected: (String) -\\u003e Unit)`: Displays a date picker dialog and calls the provided callback function with the selected date.\\n\\n`storeProfileData(profileData: ProfileData, onSuccess: () -\\u003e Unit, onFailure: (String) -\\u003e Unit)`: Stores the user\\u0027s profile data in Firestore.\\n\\n`updateUserPin(pin: String, onSuccess: () -\\u003e Unit, onFailure: (String) -\\u003e Unit)`: Updates the user\\u0027s PIN in Firestore.\\n\\n`updateUserFingerprint(fingerprintData: String, onSuccess: () -\\u003e Unit, onFailure: (String) -\\u003e Unit)`: Updates the user\\u0027s fingerprint data in Firestore.\\n\\n`checkUserProfileExists(onResult: (Boolean) -\\u003e Unit, onError: (String) -\\u003e Unit)`: Checks if the current user has a profile document in Firestore.\\n\\n`fetchUserProfileDataFromFirestore(onSuccess: (ProfileData) -\\u003e Unit, onFailure: (String) -\\u003e Unit)`: Fetches the user\\u0027s profile data from Firestore.\\n\\n`updateUserProfileData(profileData: ProfileData, onSuccess: () -\\u003e Unit, onFailure: (String) -\\u003e Unit)`: Updates the user\\u0027s profile data in Firestore.\\n\\nThe file also contains a `ProfileData` data class that represents the user\\u0027s profile information.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/FillProfileScreen.kt\&quot;:\&quot;This file contains a single Composable function `FillProfileScreen` that displays a screen for users to fill in their profile information, including name, date of birth, email, phone number, gender, and account type. The file also includes a helper Composable function `AccountTypeDropdown` that provides a dropdown menu for selecting the account type.\\n\\n`FillProfileScreen`: Displays a screen for users to fill in their profile information and saves the data to Firebase.\\n\\n`AccountTypeDropdown`: Provides a dropdown menu for selecting the account type (Student or Mentor).\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/ui/CommunityScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for a community feature in an Android app. It includes the following classes and functions:\\n\\n`CommunityScreen`: Composable function that renders the main community screen, including a list of posts, a floating action button to create a new post, and a bottom sheet for creating a new post.\\n\\n`NewPostSheet`: Composable function that renders the bottom sheet for creating a new post.\\n\\n`PostCard`: Composable function that renders a single post card, including the post content, user information, like/comment/share functionality, and a comments section.\\n\\n`CommentItem`: Composable function that renders a single comment item.\\n\\n`shareApp`: Function that shares a link to the app\\u0027s Google Play Store and GitHub repository.\\n\\n`likePost`: Function that handles liking and unliking a post.\\n\\n`deletePost`: Function that deletes a post.\\n\\n`formatTimestamp`: Function that formats a timestamp as a relative time string.\\n\\n`decodeBase64ToBitmap`: Function that decodes a base64-encoded string to a Bitmap.\\n\\nThe file also includes some utility functions and Compose previews.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/navigation/UserNavigation.kt\&quot;:\&quot;This file defines the navigation graph for the Mindspark application using Jetpack Compose. It includes the following classes and functions:\\n\\n`UserNavigation`: This function sets up the navigation graph for the user interface, defining the screens and their transitions.\\n\\nThe file does not contain any classes, but it defines the navigation routes and transitions for various screens in the Mindspark application, such as the Admin screen, Mentor screen, Community screen, Home screen, Profile screen, Courses screen, Inbox screen, Transactions screen, Notifications screen, and various profile-related screens.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminMentorModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`AdminMentorModel`: A data class that represents an admin mentor, with properties such as ID, name, profession, bio, profile image, and social links.\\n\\nThis file does not contain any functions. It serves as a data model for representing an admin mentor in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/VerifyForgotPasswordScreen.kt\&quot;:\&quot;This file contains a single Composable function and no classes.\\n\\n`VerifyForgotPasswordScreen`: This function defines the UI for the \\\&quot;Verify Forgot Password\\\&quot; screen, which includes an OTP input field, a resend code button, and a verify button.\\n\\n`ScreenPreview`: This function provides a preview of the `VerifyForgotPasswordScreen` Composable function in the Android Studio preview.\\n\\nThe file is responsible for rendering the UI for the \\\&quot;Verify Forgot Password\\\&quot; screen in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/PopularCoursesCard.kt\&quot;:\&quot;This file contains two Composable functions that define the UI for a popular course card in a vertical and horizontal layout.\\n\\n`PopularCourseCardVertical`: A composable function that creates a vertical course card with the course image, category, title, price, rating, and number of students.\\n\\n`PopularCourseCardHorizontal`: A composable function that creates a horizontal course card with the course image, category, title, price, rating, and number of students.\\n\\nThe file also imports various Compose UI components and resources to create the course card layouts.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/model/CallModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`CallModel`: A data class that represents a call, with properties for the call\\u0027s ID, name, type, date, and duration.\\n\\nThis file does not contain any functions. It simply defines a data class to represent a call, with various properties to store information about the call.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding2.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`IntroScreenStep2`: This function renders the second onboarding screen, allowing the user to skip the onboarding process and navigate to the sign-in screen, or proceed to the next onboarding screen.\\n\\nThe file is part of the onboarding UI for the Mindspark application, and it is responsible for rendering the second step of the onboarding process using the `OnboardingScreen` component and the `OnboardingData` provided.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/components/OnboardingComponents.kt\&quot;:\&quot;This file contains the implementation of an `OnboardingScreen` Composable function and several supporting Composable functions that make up the UI for an onboarding screen in an Android app.\\n\\n`OnboardingScreen`: Renders the main onboarding screen, including the skip button, the content, and the navigation controls.\\n\\n`SkipButton`: Renders a skip button that allows the user to skip the onboarding process.\\n\\n`OnboardingContent`: Renders the title and description of the current onboarding screen, with animations to fade in the content.\\n\\n`NavigationControls`: Renders the page indicator and the next button at the bottom of the onboarding screen.\\n\\n`PageIndicator`: Renders the page indicator dots to show the current step in the onboarding process.\\n\\n`NextButton`: Renders the next button, with a scaling animation when clicked.\\n\\n`EaseOutQuart` and `EaseOutCirc`: Custom easing curves used for the animations in the `OnboardingContent` Composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserDetailScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`UserDetailScreen`: This function displays a screen for creating or editing a user, allowing the user to input various details such as full name, nickname, email, password, gender, phone number, and PIN. It also includes a top app bar with a back button and a save button to save the user information.\\n\\nThe file does not contain any classes. It is a Jetpack Compose UI component that interacts with Firebase Firestore to manage user data.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/data/MentorData.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getTopMentors()`: This function returns a list of `MentorModel` objects, which represent the top mentors on the platform.\\n\\n`getMentorById(id: Int)`: This function takes an `id` parameter and returns the `MentorModel` object with the matching `id`, or `null` if no such mentor is found.\\n\\nThe file serves as a data source for the mentor-related information in the application, providing a list of top mentors and the ability to retrieve a specific mentor by their ID.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyCourses.kt\&quot;:\&quot;This file contains a Composable function `MyCourseCompleted` that displays a screen for the user\\u0027s completed and ongoing courses, with a search bar, filter options, and horizontal lists for each course type.\\n\\n`LightBlueBackground`: A color constant used as the background color for the screen.\\n\\n`MyCourseCompleted`: Displays a screen for the user\\u0027s completed and ongoing courses, with a search bar, filter options, and horizontal lists for each course type.\\n\\n`CoursesListScreenPreview`: A preview function for the `MyCourseCompleted` composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CourseFilter.kt\&quot;:\&quot;This file contains a Composable function `CoursesFilterScreen` that displays a screen for filtering courses. It uses a `LazyColumn` to display a list of `FilterCategory` items, and an `AuthButton` at the bottom to apply the selected filters. The file also includes a `LoginScreenPreview` Composable function for previewing the `CoursesFilterScreen`.\\n\\nThe file does not contain any classes, but it has the following functions:\\n\\n`LoginScreenPreview`: Previews the `CoursesFilterScreen` Composable function.\\n\\n`CoursesFilterScreen`: Displays a screen for filtering courses, allowing the user to select filter options and apply them.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/data/PostRepository.kt\&quot;:\&quot;This file contains a `PostRepository` class that provides functions to interact with the Firestore database for managing posts and comments in a community-based application.\\n\\n`PostRepository`: A class that handles the interaction with the Firestore database for managing posts and comments.\\n\\n`addPost`: Adds a new post to the Firestore database.\\n`addComment`: Adds a new comment to an existing post in the Firestore database.\\n`getPosts`: Retrieves a list of posts from the Firestore database, ordered by timestamp in descending order.\\n`observePosts`: Observes the posts in the Firestore database in real-time and notifies the caller of any updates.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/data/CourseData.kt\&quot;:\&quot;This file contains a single object called `CourseData` that provides functions to interact with a Firestore database for course-related data.\\n\\n`CourseData`: An object that provides functions to fetch course data from a Firestore database.\\n\\n`getPopularCourses()`: A function that retrieves a list of popular courses from the Firestore database.\\n\\n`getCourseByDocId(docId: String)`: A function that retrieves a specific course by its document ID from the Firestore database.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/SingleMentorDetails.kt\&quot;:\&quot;This file contains a Compose-based UI for displaying details of a single mentor, including their information, courses, and reviews. It does not contain any classes, but rather a set of Composable functions:\\n\\n`SingleMentorDetails`: Displays the full details of a mentor, including their profile, courses, and reviews.\\n\\n`MentorInfoSection`: Displays the mentor\\u0027s profile information, including their name, profession, and statistics.\\n\\n`CoursesSection`: Displays the list of courses taught by the mentor.\\n\\n`ReviewsSection`: Displays the list of reviews for the mentor.\\n\\n`SingleMentorDetailsPreview`: Provides a preview of the `SingleMentorDetails` composable.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardComponents.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`MyCompletedCourseHorizontal`: This function creates a LazyColumn that displays a list of completed courses horizontally, with each course represented by a `MyCompletedCourseCardHorizontal` component.\\n\\n`MyOngoingCourseHorizontal`: This function creates a LazyColumn that displays a list of ongoing courses horizontally, with each course represented by a `MyOngoingCourseCardHorizontal` component.\\n\\nThe file does not contain any classes, but rather focuses on providing reusable Composable functions for displaying lists of completed and ongoing courses in a horizontal layout.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCoursesListScreen.kt\&quot;:\&quot;This file contains a single Composable function `AdminCoursesListScreen` that displays a list of courses fetched from Firestore, along with a floating action button to add a new course.\\n\\n`AdminCoursesListScreen`: A Composable function that displays a list of courses fetched from Firestore, with a floating action button to add a new course.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/model/FilterModel.kt\&quot;:\&quot;This file defines two data classes:\\n\\n`FilterCategory`: A data class that represents a category of filters, with a title and a list of `FilterItem` options.\\n\\n`FilterItem`: A data class that represents a single filter option, with a name and a boolean flag indicating whether it is selected or not.\\n\\nThis file does not contain any functions. It serves as a model for representing filter categories and filter items in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/notifications/data/NotificationsData.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines three lists of `Notification` objects, which represent different types of notifications that a user might receive:\\n\\n`todayNotifications`: A list of notifications that the user received today, including a new course and a course payment.\\n\\n`yesterdayNotifications`: A list of notifications that the user received yesterday, including a credit card being connected.\\n\\n`olderNotifications`: A list of notifications that the user received in the past, including a successful account setup.\\n\\nEach `Notification` object has a `title`, `message`, and `icon` property, which are used to display the notification to the user.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/CourseFilterSection.kt\&quot;:\&quot;This file contains Composable functions for creating custom checkbox items and filter category items in a Jetpack Compose-based Android application.\\n\\n`LoginScreenPreview`: A preview composable function that displays a `CustomCheckboxItem`.\\n\\n`CustomCheckboxItem`: A composable function that creates a custom checkbox item with a clickable checkbox and a label.\\n\\n`FilterCategoryItem`: A composable function that creates a filter category item with a title and a list of `CustomCheckboxItem` components.\\n\\nThe file provides reusable UI components for displaying and interacting with filter options in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding1.kt\&quot;:\&quot;This file contains a Composable function and a Preview function for the `IntroScreenStep1` screen in the Onboarding UI of the Mindspark app.\\n\\n`IntroScreenStep1`: This Composable function renders the first step of the onboarding screen, displaying the content from the `OnboardingData` and handling the navigation to the next screen or the sign-in screen.\\n\\n`IntroScreenStep1Preview`: This Preview Composable function is used for previewing the `IntroScreenStep1` screen in the Android Studio\\u0027s Compose UI preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/utils/CommonComponents.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`NoInternetWarning`: This function displays a warning message on the screen if the device is not connected to the internet.\\n\\nThe file is a utility module that provides a reusable UI component for displaying a no-internet connection warning in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/InviteFriends.kt\&quot;:\&quot;This file contains a Jetpack Compose UI for an \\\&quot;Invite Friends\\\&quot; screen in an Android app.\\n\\n`InviteFriendsScreen`: A composable function that creates the main screen layout, including a list of friends, a \\\&quot;Share Invite Via\\\&quot; section, and a top bar.\\n\\n`FriendRow`: A composable function that renders a single row in the friend list, displaying the friend\\u0027s name, phone number, and an \\\&quot;Invite\\\&quot; button.\\n\\n`InviteButton`: A composable function that creates a button with a custom style, displaying either \\\&quot;Invite\\\&quot; or \\\&quot;Invited\\\&quot; based on the button\\u0027s state.\\n\\n`InviteFriendsPreview`: A preview composable function that displays the `InviteFriendsScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/navigation/model/NavigationModel.kt\&quot;:\&quot;This file defines a sealed class `BottomNavItem` that represents the different navigation items in the bottom navigation bar of the application. Each `BottomNavItem` has a route, a label, and an icon associated with it.\\n\\n`BottomNavItem`: A sealed class that represents the different navigation items in the bottom navigation bar of the application.\\n\\n`Home`: A `BottomNavItem` that represents the home screen.\\n`MyCourses`: A `BottomNavItem` that represents the screen for the user\\u0027s completed courses.\\n`MentorCourses`: A `BottomNavItem` that represents the screen for the mentor-specific courses.\\n`Inbox`: A `BottomNavItem` that represents the inbox screen.\\n`Community`: A `BottomNavItem` that represents the community screen.\\n`Profile`: A `BottomNavItem` that represents the profile screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/AdminEditYoutubeScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for an admin screen in a Mindspark app, specifically for managing YouTube-related content.\\n\\n`AdminEditYoutubeScreen`: A composable function that displays a screen for editing a YouTube course, allowing the admin to update various course details and save the changes.\\n\\n`DropdownMenuField`: A composable function that creates a dropdown menu field with a label and a list of options.\\n\\n`NumericTextField`: A composable function that creates a text field that only accepts numeric input.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/data/CommunityViewModel.kt\&quot;:\&quot;`CommunityViewModel`: A ViewModel class that manages the state and interactions related to the community feature in the app.\\n\\n`init`: Starts listening for real-time updates on the posts.\\n\\n`addNewPost`: Adds a new post to the community.\\n\\n`addComment`: Adds a comment to a specific post.\\n\\n`refreshPosts`: Refreshes the list of posts, typically used for pull-to-refresh functionality.\\n\\nThis file contains a ViewModel class that manages the state and interactions related to the community feature in the app. It provides functions to add new posts, add comments to posts, and refresh the list of posts.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/InboxScreen.kt\&quot;:\&quot;This file contains a single Composable function `InboxScreen` that displays the user\\u0027s inbox, including a list of conversations with other users and the ability to navigate to the chat screen for each conversation.\\n\\n`InboxScreen`: Displays the user\\u0027s inbox, including a list of conversations with other users and the ability to navigate to the chat screen for each conversation.\\n\\nThe file also includes a `Preview` function for the `InboxScreen` Composable, which allows the screen to be previewed in the Android Studio Compose UI preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthComponents.kt\&quot;:\&quot;This file contains Jetpack Compose UI components for an authentication flow, including an OTP input field, a top app bar, and a gender dropdown.\\n\\n`OTPInputFieldsPreview`: A preview composable for the `OTPInputFields` component.\\n\\n`OTPInputFields`: A composable that renders a row of text fields for entering an OTP (One-Time Password).\\n\\n`AuthTopBar`: A composable that renders a top app bar with a back button and a title.\\n\\n`GenderDropdown`: A composable that renders a dropdown menu for selecting a gender.\\n\\n`FillProfileScreenPreview`: A preview composable for the `GenderDropdown` component.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/components/CallComponent.kt\&quot;:\&quot;This file contains several Composable functions that make up the UI for a call history section in an Android app.\\n\\n`CallItem`: Displays a single call item with details like the caller\\u0027s name, call type, and call date.\\n\\n`CallsSection`: Displays a list of call items and call statistics.\\n\\n`CallStats`: Displays a card with statistics for incoming, outgoing, and missed calls.\\n\\n`CallStatItem`: Displays a single call statistic item with an icon, count, and label.\\n\\n`CallControlButton`: Displays a circular button with an icon, used for call-related actions.\\n\\nThe file provides the UI components necessary to display a call history section in an Android app, including the ability to navigate to an active call screen when a call item is clicked.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreateNewPassword.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`CreateNewPassword`: A Composable function that creates a screen for setting a new password, with input fields for the new password and confirmation, and a button to continue.\\n\\n`AutoDismissDialog2`: A Composable function that creates a dialog box that automatically dismisses and redirects the user to the home screen after a 1-second delay.\\n\\n`AutoDismissDialog2Preview`: A preview Composable function for the `AutoDismissDialog2` function.\\n\\n`ScreenPreview1`: A preview Composable function for the `CreateNewPassword` function.\\n\\nThis file is responsible for creating the UI for the \\\&quot;Create New Password\\\&quot; screen in the app, which allows the user to set a new password and provides a confirmation dialog that automatically dismisses and redirects the user to the home screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/model/EditProfileModel.kt\&quot;:\&quot;This file defines a data class `ProfileField` that represents a field in a user profile. The class contains properties for the label, value, a function to handle value changes, an icon, a flag to indicate if the field is in editing mode, a flag to indicate if the field is a dropdown, and a list of dropdown options.\\n\\n`ProfileField`: A data class that represents a field in a user profile, containing information about the label, value, value change function, icon, editing mode, dropdown status, and dropdown options.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/model/LanguageModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`LanguageOption`: A data class that represents a language option, with properties for the language code, name, and native name.\\n\\nThis file does not contain any functions. It simply defines a data class to represent a language option, which can be used in an application that deals with language preferences or settings.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/data/SpecialOfferData.kt\&quot;:\&quot;This file does not contain any classes, but it does contain one object and one function:\\n\\n`CardData`: This object provides a list of `SpecialOfferModel` objects, which represent special offers for courses.\\n\\n`getCardDetails()`: This function returns a list of `SpecialOfferModel` objects, which represent the special offers available for courses.\\n\\nThe purpose of this file is to provide a data source for the special offers that are displayed in the app.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/ChatScreen.kt\&quot;:\&quot;This file contains Compose UI components and functions for a chat screen in an Android app.\\n\\n`ChatScreenPreview`: A preview composable for the `ChatDetailScreen`.\\n\\n`ChatDetailScreen`: The main composable function that renders the chat screen, including the message list, input bar, and handling of message deletion.\\n\\n`ChatBubble`: A composable function that renders a single chat message bubble.\\n\\n`sendMessage`: A function that sends a new message to the Firebase Realtime Database.\\n\\n`markMessagesAsRead`: A function that marks messages as read and seen in the Firebase Realtime Database.\\n\\n`getLastMessage`: A suspend function that retrieves the last message in a chat conversation from the Firebase Realtime Database.\\n\\n`deleteMessage`: A function that deletes a message from the Firebase Realtime Database.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/MainActivity.kt\&quot;:\&quot;This file appears to be the main activity class for an Android application called \\\&quot;MindSpark\\\&quot;. It sets up the app\\u0027s navigation and displays a warning message if the device is not connected to the internet.\\n\\n`MainActivity`: The main activity class that sets up the app\\u0027s UI and navigation.\\n\\n`rememberNetworkState`: A function that checks the device\\u0027s network connectivity and returns a boolean value indicating whether the device is connected to the internet.\\n\\n`NoInternetWarning`: A function that displays a warning message if the device is not connected to the internet.\\n\\n`AppNavigation`: A function that sets up the app\\u0027s navigation structure.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/ui/VideoPlayerScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`VideoPlayerScreen`: This function creates a Scaffold with a top app bar and a WebView that displays a video using the provided `videoUrl`.\\n\\nThe file also defines a private constant `LightBlueBackground` which is a light blue color used as the background for the screen.\\n\\nOverall, this file provides a screen that displays a video player using a WebView within a Compose-based UI.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/community/components/CommunityCategoriesList.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CommunityCategoriesList`: This function renders a row of community categories, where the selected category is highlighted with a primary color background and white text, while the other categories have a light gray background and black text. The function takes a list of categories, the currently selected category, and a callback function to handle category selection.\\n\\nThe file appears to be a part of a larger Android application built using the Jetpack Compose UI toolkit. It provides a reusable component for displaying a list of community categories, which can be used in the application\\u0027s community-related screens.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeDetail.kt\&quot;:\&quot;This file contains a Composable function and a helper function:\\n\\n`YoutubeDetail`: A Composable function that displays a screen for fetching and editing a YouTube playlist, allowing the user to enter a playlist URL, fetch the playlist items, and then edit the details of the playlist.\\n\\n`saveAdminYoutubeModelToFirebase`: A helper function that saves an `AdminYoutubeModel` object to a Firestore collection named \\\&quot;courses\\\&quot;.\\n\\nThe file also includes various state variables and helper functions to handle the fetching and editing of the YouTube playlist data.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/SingleMentorDetailsComponent.kt\&quot;:\&quot;This file contains several Composable functions that define the UI components for a mentor course item, a follow button, and a review item.\\n\\n`MentorCourseItem`: A composable function that displays a card-like UI element for a mentor course, including the course title, rating, and price.\\n\\n`FollowButton`: A composable function that creates a button with a \\\&quot;Follow\\\&quot; or \\\&quot;Unfollow\\\&quot; label, which toggles the user\\u0027s following state.\\n\\n`ReviewItem`: A composable function that displays a review item, including the reviewer\\u0027s profile image, name, review text, and like/dislike functionality.\\n\\nThe file also imports various Compose UI components and resources from the Android framework and the app\\u0027s custom theme.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/data/OnboardingData.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a data object called `OnboardingData` that holds a list of `OnboardingScreenContent` objects, each representing the content for a single onboarding screen in an application. The `OnboardingScreenContent` objects contain information such as the title, description, current step, and the next route for each onboarding screen.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Security.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SecurityScreen`: This function creates a Scaffold with a top bar and a column of `SecurityScreenItem` components that allow the user to toggle various security settings such as \\\&quot;Remember Me\\\&quot;, \\\&quot;Biometric ID\\\&quot;, and \\\&quot;Face ID\\\&quot;.\\n\\nThe file also includes a `LoginScreenPreview` Composable function, which is used for previewing the `SecurityScreen` in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCourseDetailScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`AdminCourseDetailScreen`: This function creates a screen for the admin to view, edit, and save course details, including fetching course data from Firestore and updating it.\\n\\nThe file also includes several helper functions, such as `fetchYoutubePlaylistData`, which is used to fetch data from a YouTube playlist.\\n\\nOverall, this file provides the UI and functionality for an admin to manage course details in a Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/transactions/model/TransactionsModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`TransactionsModel`: A data class that represents a transaction, with properties for the title and course of the transaction.\\n\\nThis file does not contain any functions. It simply defines a data class to represent the structure of a transaction.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it sets up the following plugins:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin.\\n`alias(libs.plugins.kotlin.compose) apply false`: Applies the Kotlin Compose plugin.\\n`alias(libs.plugins.google.gms.google.services) apply false`: Applies the Google Play Services plugin.\\n\\nThe purpose of this file is to provide a centralized location for defining common configuration options that can be shared across all sub-projects or modules in the Android application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/components/TopMentorCard.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`TopMentorCardHorizontal`: A composable function that displays a mentor\\u0027s profile picture, name, and profession in a horizontal card layout.\\n\\n`TopMentorCardVertical`: A composable function that displays a mentor\\u0027s profile picture, name, and profession in a vertical card layout.\\n\\nThe file is responsible for creating UI components for displaying information about mentors in a Jetpack Compose-based application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Color.kt\&quot;:\&quot;This file defines the color palette for the Mindspark app\\u0027s user interface theme. It does not contain any classes or functions, but rather defines several color constants that can be used throughout the app\\u0027s UI.\\n\\n`LightBlueBackground`: A light blue color used as the background for the app\\u0027s UI.\\n`JostTextColor`: A dark blue color used for the app\\u0027s primary text.\\n`MulishTextColor`: A medium gray color used for the app\\u0027s secondary text.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseModel.kt\&quot;:\&quot;`FeatureModel`: A data class representing a feature with a description and an icon resource.\\n\\n`VideoDetails`: A data class representing the details of a video, including the title, duration, and video URL.\\n\\n`CourseModel`: A data class representing a course, with various properties such as category, title, price, rating, and more.\\n\\n`Review`: A data class representing a review, with the reviewer\\u0027s name, the review text, the number of likes, and the time since the review was posted.\\n\\n`VideoItem`: A data class representing a video item, with the video ID, title, description, and thumbnail URL.\\n\\n`CourseRepository`: A class that provides a method to fetch a list of `CourseModel` objects from a Firestore database.\\n\\n`fetchYoutubePlaylistData`: A function that fetches video details from a YouTube playlist by extracting the playlist ID from the provided link and making a network call to the YouTube API.\\n\\nThis file defines the data models and repository for a course-related application, including the ability to fetch course data from a Firestore database and retrieve video details from a YouTube playlist.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/onboarding/model/OnboardingScreenModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`OnboardingScreenContent`: A data class that represents the content and metadata for a single onboarding screen, including the title, description, current step, total steps, and the next route.\\n\\nThis file does not contain any functions. It serves as a model class to encapsulate the necessary information for displaying and navigating through the onboarding screens in the application.\&quot;,\&quot;/app/src/main/java/com/example/mindspark/home/model/CategoriesModel.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`CategoryItem`: A data class that represents a category item, containing a title and an icon resource.\\n\\nThis file does not contain any functions. It is a simple data class that represents a category item, which is likely used in the \\\&quot;Categories Screen\\\&quot; of the Mindspark application.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/valvi/StudioProjects/MindSpark&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/mindspark/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/mindspark/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/components/AdminCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/components/AdminCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminMentorModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminMentorModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminMentorModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminUsersModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminUsersModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminUsersModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminYoutubeModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/model/AdminYoutubeModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminYoutubeModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCourseDetailScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCourseDetailScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminCourseDetailScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCoursesListScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/course/AdminCoursesListScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminCoursesListScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorDetailScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorDetailScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MentorDetailScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorsListScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/mentor/MentorsListScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MentorsListScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserDetailScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserDetailScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserDetailScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserListScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/users/UserListScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserListScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/AdminEditYoutubeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/AdminEditYoutubeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminEditYoutubeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeBackend.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeBackend.kt\&quot;,\&quot;file_name\&quot;:\&quot;YoutubeBackend.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeDetail.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/youtube/YoutubeDetail.kt\&quot;,\&quot;file_name\&quot;:\&quot;YoutubeDetail.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/admin/ui/AdminScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/admin/ui/AdminScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AdminScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthButton.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthButton.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthButton.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthTextField.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/components/AuthTextField.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthTextField.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/data/AuthData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/data/AuthData.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/model/PinModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/model/PinModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;PinModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/model/UserModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/model/UserModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/LoginScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/LoginScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/SignInScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/login/SignInScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SignInScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/FillProfileScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/FillProfileScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;FillProfileScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/RegisterScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/register/RegisterScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegisterScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreateNewPassword.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreateNewPassword.kt\&quot;,\&quot;file_name\&quot;:\&quot;CreateNewPassword.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreatePinScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/CreatePinScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CreatePinScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/FingerprintScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/FingerprintScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;FingerprintScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/ForgotPasswordScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/ForgotPasswordScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ForgotPasswordScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/VerifyForgotPasswordScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/auth/ui/security/VerifyForgotPasswordScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;VerifyForgotPasswordScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/backend/FirebaseAuth.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/backend/FirebaseAuth.kt\&quot;,\&quot;file_name\&quot;:\&quot;FirebaseAuth.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleDrive.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleDrive.kt\&quot;,\&quot;file_name\&quot;:\&quot;GoogleDrive.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleSignIn.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/backend/GoogleSignIn.kt\&quot;,\&quot;file_name\&quot;:\&quot;GoogleSignIn.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/components/CommunityCategoriesList.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/components/CommunityCategoriesList.kt\&quot;,\&quot;file_name\&quot;:\&quot;CommunityCategoriesList.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/data/CommunityViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/data/CommunityViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;CommunityViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/data/PostRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/data/PostRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;PostRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/model/post.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/model/post.kt\&quot;,\&quot;file_name\&quot;:\&quot;post.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/ui/CommunityScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/ui/CommunityScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CommunityScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/community/ui/NewPostScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/community/ui/NewPostScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;NewPostScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/CourseFilterSection.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/CourseFilterSection.kt\&quot;,\&quot;file_name\&quot;:\&quot;CourseFilterSection.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/CoursesDetailComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/CoursesDetailComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;CoursesDetailComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/CustomTextFieldImage.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/CustomTextFieldImage.kt\&quot;,\&quot;file_name\&quot;:\&quot;CustomTextFieldImage.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/PopularCoursesCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/PopularCoursesCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;PopularCoursesCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/SingleMentorDetailsComponent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/SingleMentorDetailsComponent.kt\&quot;,\&quot;file_name\&quot;:\&quot;SingleMentorDetailsComponent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/ToggleSelectionRow.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/ToggleSelectionRow.kt\&quot;,\&quot;file_name\&quot;:\&quot;ToggleSelectionRow.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/components/TopMentorCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/components/TopMentorCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;TopMentorCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/data/CourseData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/data/CourseData.kt\&quot;,\&quot;file_name\&quot;:\&quot;CourseData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/data/FilterData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/data/FilterData.kt\&quot;,\&quot;file_name\&quot;:\&quot;FilterData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/data/MentorData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/data/MentorData.kt\&quot;,\&quot;file_name\&quot;:\&quot;MentorData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/data/SpecialOfferData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/data/SpecialOfferData.kt\&quot;,\&quot;file_name\&quot;:\&quot;SpecialOfferData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseCategoryModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseCategoryModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;CourseCategoryModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/model/CourseModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;CourseModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/model/FilterModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/model/FilterModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;FilterModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/model/MentorModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/model/MentorModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MentorModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/model/SpecialOffersModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/model/SpecialOffersModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;SpecialOffersModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CourseFilter.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CourseFilter.kt\&quot;,\&quot;file_name\&quot;:\&quot;CourseFilter.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CoursesDetailScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/CoursesDetailScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CoursesDetailScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/OnlineCoursesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/OnlineCoursesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;OnlineCoursesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/PopularCoursesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/PopularCoursesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;PopularCoursesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/SingleMentorDetails.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/SingleMentorDetails.kt\&quot;,\&quot;file_name\&quot;:\&quot;SingleMentorDetails.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/TopMentorScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/TopMentorScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;TopMentorScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/courses/ui/VideoPlayerScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/courses/ui/VideoPlayerScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;VideoPlayerScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/components/HomeComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/components/HomeComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/components/SearchRecent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/components/SearchRecent.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchRecent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/components/SpecialOfferCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/components/SpecialOfferCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;SpecialOfferCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/data/SearchData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/data/SearchData.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/model/CategoriesModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/model/CategoriesModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;CategoriesModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/model/SearchModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/model/SearchModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/ui/CategoriesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/ui/CategoriesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CategoriesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/ui/HomeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/ui/HomeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/home/ui/SearchScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/home/ui/SearchScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/components/CallComponent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/components/CallComponent.kt\&quot;,\&quot;file_name\&quot;:\&quot;CallComponent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/components/ChatComponent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/components/ChatComponent.kt\&quot;,\&quot;file_name\&quot;:\&quot;ChatComponent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/data/CallData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/data/CallData.kt\&quot;,\&quot;file_name\&quot;:\&quot;CallData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/model/CallModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/model/CallModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;CallModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/model/ChatModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/model/ChatModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;ChatModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/model/InboxModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/model/InboxModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;InboxModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/CallScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/CallScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CallScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/ChatScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/ChatScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ChatScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/InboxScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/inbox/ui/InboxScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;InboxScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/mentor/ui/mentor.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/mentor/ui/mentor.kt\&quot;,\&quot;file_name\&quot;:\&quot;mentor.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;CardComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardView.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/CardView.kt\&quot;,\&quot;file_name\&quot;:\&quot;CardView.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyLessonsComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyLessonsComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyLessonsComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyOngoingLessonsComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/components/MyOngoingLessonsComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyOngoingLessonsComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/data/MyLessonsData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/data/MyLessonsData.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyLessonsData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/model/MyLessonsModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/model/MyLessonsModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyLessonsModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Certificate.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Certificate.kt\&quot;,\&quot;file_name\&quot;:\&quot;Certificate.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Lessons.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/Lessons.kt\&quot;,\&quot;file_name\&quot;:\&quot;Lessons.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyCourses.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyCourses.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyCourses.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyOngoingLessons.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/myCourses/ui/MyOngoingLessons.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyOngoingLessons.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/navigation/components/NavigationBarScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/navigation/components/NavigationBarScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavigationBarScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/navigation/model/NavigationModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/navigation/model/NavigationModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavigationModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/navigation/AuthenticationNavigation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/navigation/AuthenticationNavigation.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthenticationNavigation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/navigation/MainNavigation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/navigation/MainNavigation.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainNavigation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/navigation/UserNavigation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/navigation/UserNavigation.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserNavigation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/notifications/data/NotificationsData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/notifications/data/NotificationsData.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationsData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/notifications/model/NotificationsModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/notifications/model/NotificationsModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationsModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/notifications/ui/NotificationsScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/notifications/ui/NotificationsScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationsScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/components/OnboardingComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/components/OnboardingComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;OnboardingComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/data/OnboardingData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/data/OnboardingData.kt\&quot;,\&quot;file_name\&quot;:\&quot;OnboardingData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/model/OnboardingScreenModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/model/OnboardingScreenModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;OnboardingScreenModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/LaunchScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/LaunchScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;LaunchScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding1.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding1.kt\&quot;,\&quot;file_name\&quot;:\&quot;Onboarding1.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding2.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding2.kt\&quot;,\&quot;file_name\&quot;:\&quot;Onboarding2.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding3.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/onboarding/ui/Onboarding3.kt\&quot;,\&quot;file_name\&quot;:\&quot;Onboarding3.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/payment/ui/PaymentScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/payment/ui/PaymentScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;PaymentScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/EditProfileComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/EditProfileComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;EditProfileComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/NotificationItem.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/NotificationItem.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationItem.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/PaymentMethodItem.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/PaymentMethodItem.kt\&quot;,\&quot;file_name\&quot;:\&quot;PaymentMethodItem.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/ProfileScreenComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/ProfileScreenComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProfileScreenComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/SecurityItem.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/SecurityItem.kt\&quot;,\&quot;file_name\&quot;:\&quot;SecurityItem.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/components/SimpleCustomTextField.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/components/SimpleCustomTextField.kt\&quot;,\&quot;file_name\&quot;:\&quot;SimpleCustomTextField.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/model/EditProfileModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/model/EditProfileModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;EditProfileModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/model/InviteFriendsModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/model/InviteFriendsModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;InviteFriendsModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/model/LanguageModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/model/LanguageModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;LanguageModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/AddNewCrad.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/AddNewCrad.kt\&quot;,\&quot;file_name\&quot;:\&quot;AddNewCrad.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/EditProfile.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/EditProfile.kt\&quot;,\&quot;file_name\&quot;:\&quot;EditProfile.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/HelpCenter.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/HelpCenter.kt\&quot;,\&quot;file_name\&quot;:\&quot;HelpCenter.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/InviteFriends.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/InviteFriends.kt\&quot;,\&quot;file_name\&quot;:\&quot;InviteFriends.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Language.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Language.kt\&quot;,\&quot;file_name\&quot;:\&quot;Language.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Notifications.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Notifications.kt\&quot;,\&quot;file_name\&quot;:\&quot;Notifications.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/PaymentOption.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/PaymentOption.kt\&quot;,\&quot;file_name\&quot;:\&quot;PaymentOption.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Security.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Security.kt\&quot;,\&quot;file_name\&quot;:\&quot;Security.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Terms.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/sections/Terms.kt\&quot;,\&quot;file_name\&quot;:\&quot;Terms.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/profile/ui/ProfileScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/profile/ui/ProfileScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProfileScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/transactions/components/TransactionsList.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/transactions/components/TransactionsList.kt\&quot;,\&quot;file_name\&quot;:\&quot;TransactionsList.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/transactions/data/TransactionsData.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/transactions/data/TransactionsData.kt\&quot;,\&quot;file_name\&quot;:\&quot;TransactionsData.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/transactions/model/TransactionsModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/transactions/model/TransactionsModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;TransactionsModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/E-Receipt.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/E-Receipt.kt\&quot;,\&quot;file_name\&quot;:\&quot;E-Receipt.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/TransactionsScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/transactions/ui/TransactionsScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;TransactionsScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/utils/CommonComponents.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/utils/CommonComponents.kt\&quot;,\&quot;file_name\&quot;:\&quot;CommonComponents.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/utils/NetworkUtils.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/utils/NetworkUtils.kt\&quot;,\&quot;file_name\&quot;:\&quot;NetworkUtils.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mindspark/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mindspark/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/mindspark/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/mindspark/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>